/*
 * generated by Xtext 2.17.0
 */
package org.hanashiconlang.ui.outline

import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.ui.editor.outline.IOutlineNode
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider
import org.hanashiconlang.hanashi.HanashiPackage
import org.hanashiconlang.hanashi.HtmlData
import org.hanashiconlang.hanashi.MetaData
import org.hanashiconlang.hanashi.RichString
import org.hanashiconlang.hanashi.ArticlePart

/**
 * Customization of the default outline structure.
 *
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#outline
 */
class HanashiOutlineTreeProvider extends DefaultOutlineTreeProvider {

	protected override void _createChildren(IOutlineNode parentNode, EObject modelElement) {
		for (EObject childElement : modelElement.eContents.filter[
			!(it instanceof RichString || it instanceof MetaData || it instanceof HtmlData || it instanceof ArticlePart)
		])
		createNode(parentNode, childElement);
	}

	protected override boolean _isLeaf(EObject modelElement) {
		!modelElement.eClass().getEAllContainments.exists[
			modelElement.eIsSet(it) &&
			it.EReferenceType != HanashiPackage.Literals.RICH_STRING &&
			it.EReferenceType != HanashiPackage.Literals.META_DATA &&
			it.EReferenceType != HanashiPackage.Literals.HTML_DATA
		]
	}

}
